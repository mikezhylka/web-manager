{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ja\\\\projektprojekt\\\\superprojekt\\\\src\\\\pages\\\\TaskDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchTasks, createTask, updateTask } from '../services/Api';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  // Pobieranie zadań\n  useEffect(() => {\n    const loadTasks = async () => {\n      const data = await fetchTasks();\n      setTasks(data);\n    };\n    loadTasks();\n  }, []);\n\n  // Dodawanie nowego zadania\n  const handleAddTask = async () => {\n    if (newTask.trim() === '') return;\n    const result = await createTask({\n      title: newTask,\n      status: 'todo'\n    });\n    if (result.success) {\n      setTasks(prevTasks => [...prevTasks, result.task]);\n      setNewTask('');\n    }\n  };\n\n  // Aktualizacja statusu zadania\n  const handleUpdateTaskStatus = async (taskId, newStatus) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (!task) return;\n    const updatedTask = {\n      ...task,\n      status: newStatus\n    };\n    const result = await updateTask(taskId, updatedTask);\n    if (result.success) {\n      setTasks(prevTasks => prevTasks.map(t => t.id === taskId ? result.task : t));\n    }\n  };\n\n  // Filtruj zadania według statusu\n  const filterTasksByStatus = status => {\n    return tasks.filter(task => task.status === status);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tablica Kanban\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Nowe zadanie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Dodaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Do zrobienia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), filterTasksByStatus('todo').map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-task\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateTaskStatus(task.id, 'in-progress'),\n            children: \"Przenie\\u015B do \\\"W trakcie\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"W trakcie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), filterTasksByStatus('in-progress').map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-task\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateTaskStatus(task.id, 'done'),\n            children: \"Przenie\\u015B do \\\"Zako\\u0144czone\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Zako\\u0144czone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), filterTasksByStatus('done').map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-task\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","fetchTasks","createTask","updateTask","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","newTask","setNewTask","loadTasks","data","handleAddTask","trim","result","title","status","success","prevTasks","task","handleUpdateTaskStatus","taskId","newStatus","find","t","id","updatedTask","map","filterTasksByStatus","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ja/projektprojekt/superprojekt/src/pages/TaskDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchTasks, createTask, updateTask } from '../services/Api';\r\nimport '../styles/Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  // Pobieranie zadań\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    };\r\n\r\n    loadTasks();\r\n  }, []);\r\n\r\n  // Dodawanie nowego zadania\r\n  const handleAddTask = async () => {\r\n    if (newTask.trim() === '') return;\r\n\r\n    const result = await createTask({ title: newTask, status: 'todo' });\r\n    if (result.success) {\r\n      setTasks((prevTasks) => [...prevTasks, result.task]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  // Aktualizacja statusu zadania\r\n  const handleUpdateTaskStatus = async (taskId, newStatus) => {\r\n    const task = tasks.find((t) => t.id === taskId);\r\n    if (!task) return;\r\n\r\n    const updatedTask = { ...task, status: newStatus };\r\n    const result = await updateTask(taskId, updatedTask);\r\n    if (result.success) {\r\n      setTasks((prevTasks) =>\r\n        prevTasks.map((t) => (t.id === taskId ? result.task : t))\r\n      );\r\n    }\r\n  };\r\n\r\n  // Filtruj zadania według statusu\r\n  const filterTasksByStatus = (status) => {\r\n    return tasks.filter((task) => task.status === status);\r\n  };\r\n\r\n  return (\r\n    <div className=\"kanban-container\">\r\n      <h1>Tablica Kanban</h1>\r\n\r\n      {/* Dodawanie nowego zadania */}\r\n      <div className=\"add-task\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          placeholder=\"Nowe zadanie\"\r\n        />\r\n        <button onClick={handleAddTask}>Dodaj</button>\r\n      </div>\r\n\r\n      <div className=\"kanban-board\">\r\n        {/* Kolumna \"Do zrobienia\" */}\r\n        <div className=\"kanban-column\">\r\n          <h2>Do zrobienia</h2>\r\n          {filterTasksByStatus('todo').map((task) => (\r\n            <div key={task.id} className=\"kanban-task\">\r\n              <p>{task.title}</p>\r\n              <button\r\n                onClick={() => handleUpdateTaskStatus(task.id, 'in-progress')}\r\n              >\r\n                Przenieś do \"W trakcie\"\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Kolumna \"W trakcie\" */}\r\n        <div className=\"kanban-column\">\r\n          <h2>W trakcie</h2>\r\n          {filterTasksByStatus('in-progress').map((task) => (\r\n            <div key={task.id} className=\"kanban-task\">\r\n              <p>{task.title}</p>\r\n              <button\r\n                onClick={() => handleUpdateTaskStatus(task.id, 'done')}\r\n              >\r\n                Przenieś do \"Zakończone\"\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Kolumna \"Zakończone\" */}\r\n        <div className=\"kanban-column\">\r\n          <h2>Zakończone</h2>\r\n          {filterTasksByStatus('done').map((task) => (\r\n            <div key={task.id} className=\"kanban-task\">\r\n              <p>{task.title}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}