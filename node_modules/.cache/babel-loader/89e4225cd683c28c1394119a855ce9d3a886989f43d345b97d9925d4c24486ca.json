{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ja\\\\projektprojekt\\\\superprojekt\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchTasks, createTask, updateTask } from '../services/Api';\nimport '../styles/Dashboard.css';\n\n// Przyjmujemy, że aktualny dział użytkownika pochodzi z globalnego stanu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userDepartment = 'IT'; // To powinno pochodzić z kontekstu/logowania\n\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskDepartment, setNewTaskDepartment] = useState(userDepartment); // Domyślnie dział użytkownika\n\n  // Pobieranie zadań\n  useEffect(() => {\n    const loadTasks = async () => {\n      const data = await fetchTasks();\n      setTasks(data);\n    };\n    loadTasks();\n  }, []);\n\n  // Dodawanie nowego zadania\n  const handleAddTask = async () => {\n    if (newTask.trim() === '' || newTaskDepartment === '') return;\n    const result = await createTask({\n      title: newTask,\n      department: newTaskDepartment,\n      status: 'todo'\n    });\n    if (result.success) {\n      setTasks(prevTasks => [...prevTasks, result.task]);\n      setNewTask('');\n    }\n  };\n\n  // Aktualizacja statusu zadania\n  const handleUpdateTaskStatus = async (taskId, newStatus) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (!task) return;\n    const updatedTask = {\n      ...task,\n      status: newStatus\n    };\n    const result = await updateTask(taskId, updatedTask);\n    if (result.success) {\n      setTasks(prevTasks => prevTasks.map(t => t.id === taskId ? result.task : t));\n    }\n  };\n\n  // Filtruj zadania według działu\n  const filterTasksByDepartment = department => tasks.filter(task => task.department === department);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Tablica Kanban - \", userDepartment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), userDepartment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Nowe zadanie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newTaskDepartment,\n        onChange: e => setNewTaskDepartment(e.target.value),\n        disabled: userDepartment !== 'Admin' // Admin może zmieniać działy\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IT\",\n          children: \"IT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HR\",\n          children: \"HR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Marketing\",\n          children: \"Marketing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Dodaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: ['IT', 'HR', 'Marketing'].map(department => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: department\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), filterTasksByDepartment(department).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-task\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), task.status === 'todo' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateTaskStatus(task.id, 'in-progress'),\n            children: \"W trakcie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this), task.status === 'in-progress' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateTaskStatus(task.id, 'done'),\n            children: \"Zako\\u0144czone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))]\n      }, department, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"RaiKp3IB1eG2gosCPOFFyA95hCw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","fetchTasks","createTask","updateTask","jsxDEV","_jsxDEV","userDepartment","Dashboard","_s","tasks","setTasks","newTask","setNewTask","newTaskDepartment","setNewTaskDepartment","loadTasks","data","handleAddTask","trim","result","title","department","status","success","prevTasks","task","handleUpdateTaskStatus","taskId","newStatus","find","t","id","updatedTask","map","filterTasksByDepartment","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ja/projektprojekt/superprojekt/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchTasks, createTask, updateTask } from '../services/Api';\r\nimport '../styles/Dashboard.css';\r\n\r\n// Przyjmujemy, że aktualny dział użytkownika pochodzi z globalnego stanu\r\nconst userDepartment = 'IT'; // To powinno pochodzić z kontekstu/logowania\r\n\r\nconst Dashboard = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n  const [newTaskDepartment, setNewTaskDepartment] = useState(userDepartment); // Domyślnie dział użytkownika\r\n\r\n  // Pobieranie zadań\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    };\r\n\r\n    loadTasks();\r\n  }, []);\r\n\r\n  // Dodawanie nowego zadania\r\n  const handleAddTask = async () => {\r\n    if (newTask.trim() === '' || newTaskDepartment === '') return;\r\n\r\n    const result = await createTask({\r\n      title: newTask,\r\n      department: newTaskDepartment,\r\n      status: 'todo',\r\n    });\r\n\r\n    if (result.success) {\r\n      setTasks((prevTasks) => [...prevTasks, result.task]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  // Aktualizacja statusu zadania\r\n  const handleUpdateTaskStatus = async (taskId, newStatus) => {\r\n    const task = tasks.find((t) => t.id === taskId);\r\n    if (!task) return;\r\n\r\n    const updatedTask = { ...task, status: newStatus };\r\n    const result = await updateTask(taskId, updatedTask);\r\n    if (result.success) {\r\n      setTasks((prevTasks) =>\r\n        prevTasks.map((t) => (t.id === taskId ? result.task : t))\r\n      );\r\n    }\r\n  };\r\n\r\n  // Filtruj zadania według działu\r\n  const filterTasksByDepartment = (department) =>\r\n    tasks.filter((task) => task.department === department);\r\n\r\n  return (\r\n    <div className=\"kanban-container\">\r\n      <h1>Tablica Kanban - {userDepartment}</h1>\r\n\r\n      {/* Dodawanie nowego zadania */}\r\n      {userDepartment && (\r\n        <div className=\"add-task\">\r\n          <input\r\n            type=\"text\"\r\n            value={newTask}\r\n            onChange={(e) => setNewTask(e.target.value)}\r\n            placeholder=\"Nowe zadanie\"\r\n          />\r\n          <select\r\n            value={newTaskDepartment}\r\n            onChange={(e) => setNewTaskDepartment(e.target.value)}\r\n            disabled={userDepartment !== 'Admin'} // Admin może zmieniać działy\r\n          >\r\n            <option value=\"IT\">IT</option>\r\n            <option value=\"HR\">HR</option>\r\n            <option value=\"Marketing\">Marketing</option>\r\n          </select>\r\n          <button onClick={handleAddTask}>Dodaj</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"kanban-board\">\r\n        {/* Kolumny dla każdego działu */}\r\n        {['IT', 'HR', 'Marketing'].map((department) => (\r\n          <div key={department} className=\"kanban-column\">\r\n            <h2>{department}</h2>\r\n            {filterTasksByDepartment(department).map((task) => (\r\n              <div key={task.id} className=\"kanban-task\">\r\n                <p>{task.title}</p>\r\n                {task.status === 'todo' && (\r\n                  <button\r\n                    onClick={() => handleUpdateTaskStatus(task.id, 'in-progress')}\r\n                  >\r\n                    W trakcie\r\n                  </button>\r\n                )}\r\n                {task.status === 'in-progress' && (\r\n                  <button\r\n                    onClick={() => handleUpdateTaskStatus(task.id, 'done')}\r\n                  >\r\n                    Zakończone\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}