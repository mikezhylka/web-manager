{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ja\\\\projektprojekt\\\\superprojekt\\\\src\\\\pages\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar'; // Import biblioteki\nimport 'react-calendar/dist/Calendar.css'; // Stylizacja kalendarza\nimport '../styles/Calendar.css'; // Własne style\nimport { fetchTasks } from '../services/Api'; // Mockowana funkcja pobierania zadań\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [tasksForDate, setTasksForDate] = useState([]);\n\n  // Pobieranie zadań\n  useEffect(() => {\n    const loadTasks = async () => {\n      const data = await fetchTasks();\n      setTasks(data);\n    };\n    loadTasks();\n  }, []);\n\n  // Obsługa wyboru daty\n  const handleDateChange = date => {\n    setSelectedDate(date);\n\n    // Filtruj zadania dla wybranej daty\n    const tasksForSelectedDate = tasks.filter(task => {\n      const taskDate = new Date(task.date); // Zakładamy, że zadania mają pole `date`\n      return taskDate.toDateString() === date.toDateString();\n    });\n    setTasksForDate(tasksForSelectedDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kalendarz zada\\u0144\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleDateChange,\n      value: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-for-date\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Zadania na \", selectedDate.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), tasksForDate.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasksForDate.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: task.completed ? 'completed' : 'pending',\n          children: [task.title, \" - \", task.completed ? 'Zakończone' : 'W trakcie']\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Brak zada\\u0144 na wybrany dzie\\u0144.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarPage, \"kHfNEWB1YP7WzQ/No4VhwaOdwRE=\");\n_c = CalendarPage;\nexport default CalendarPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","fetchTasks","jsxDEV","_jsxDEV","CalendarPage","_s","tasks","setTasks","selectedDate","setSelectedDate","Date","tasksForDate","setTasksForDate","loadTasks","data","handleDateChange","date","tasksForSelectedDate","filter","task","taskDate","toDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","length","map","completed","title","id","_c","$RefreshReg$"],"sources":["C:/Users/ja/projektprojekt/superprojekt/src/pages/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar'; // Import biblioteki\r\nimport 'react-calendar/dist/Calendar.css'; // Stylizacja kalendarza\r\nimport '../styles/Calendar.css'; // Własne style\r\nimport { fetchTasks } from '../services/Api'; // Mockowana funkcja pobierania zadań\r\n\r\nconst CalendarPage = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [tasksForDate, setTasksForDate] = useState([]);\r\n\r\n  // Pobieranie zadań\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    };\r\n\r\n    loadTasks();\r\n  }, []);\r\n\r\n  // Obsługa wyboru daty\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n\r\n    // Filtruj zadania dla wybranej daty\r\n    const tasksForSelectedDate = tasks.filter((task) => {\r\n      const taskDate = new Date(task.date); // Zakładamy, że zadania mają pole `date`\r\n      return (\r\n        taskDate.toDateString() === date.toDateString()\r\n      );\r\n    });\r\n\r\n    setTasksForDate(tasksForSelectedDate);\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <h1>Kalendarz zadań</h1>\r\n      <Calendar\r\n        onChange={handleDateChange}\r\n        value={selectedDate}\r\n      />\r\n\r\n      <div className=\"tasks-for-date\">\r\n        <h2>Zadania na {selectedDate.toDateString()}</h2>\r\n        {tasksForDate.length > 0 ? (\r\n          <ul>\r\n            {tasksForDate.map((task) => (\r\n              <li key={task.id} className={task.completed ? 'completed' : 'pending'}>\r\n                {task.title} - {task.completed ? 'Zakończone' : 'W trakcie'}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Brak zadań na wybrany dzień.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}