{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ja\\\\projektprojekt\\\\superprojekt\\\\src\\\\pages\\\\TaskDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchTaskDetails, fetchCommentsForTask, addCommentToTask } from '../services/Api';\nimport '../styles/TaskDetails.css'; // Import stylów\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDetails = ({\n  match\n}) => {\n  _s();\n  const taskId = match.params.id; // Pobieranie ID zadania z URL\n  const [task, setTask] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const loadTaskDetails = async () => {\n      try {\n        const taskDetails = await fetchTaskDetails(taskId);\n        setTask(taskDetails);\n        const taskComments = await fetchCommentsForTask(taskId);\n        setComments(taskComments);\n      } catch (err) {\n        setError('Nie udało się załadować szczegółów zadania.');\n      }\n    };\n    loadTaskDetails();\n  }, [taskId]);\n  const handleAddComment = async () => {\n    if (newComment.trim() === '') return;\n    try {\n      const result = await addCommentToTask(taskId, {\n        author: 'Aktualny Użytkownik',\n        // Możesz zastąpić dynamicznym autorem\n        text: newComment,\n        date: new Date().toISOString()\n      });\n      if (result.success) {\n        setComments(prevComments => [...prevComments, result.comment]);\n        setNewComment('');\n      }\n    } catch (err) {\n      setError('Nie udało się dodać komentarza.');\n    }\n  };\n  if (!task) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0141adowanie szczeg\\xF3\\u0142\\xF3w zadania...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", task.completed ? 'Zakończone' : 'W trakcie']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Komentarze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: comment.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), \" (\", new Date(comment.date).toLocaleDateString(), \"):\", ' ', comment.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Dodaj komentarz...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddComment,\n          children: \"Dodaj komentarz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDetails, \"05y+QDzRUIVej0DH9Un0hqinkp8=\");\n_c = TaskDetails;\nexport default TaskDetails;\nvar _c;\n$RefreshReg$(_c, \"TaskDetails\");","map":{"version":3,"names":["React","useEffect","useState","fetchTaskDetails","fetchCommentsForTask","addCommentToTask","jsxDEV","_jsxDEV","TaskDetails","match","_s","taskId","params","id","task","setTask","comments","setComments","newComment","setNewComment","error","setError","loadTaskDetails","taskDetails","taskComments","err","handleAddComment","trim","result","author","text","date","Date","toISOString","success","prevComments","comment","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","description","completed","map","toLocaleDateString","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ja/projektprojekt/superprojekt/src/pages/TaskDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchTaskDetails, fetchCommentsForTask, addCommentToTask } from '../services/Api';\r\nimport '../styles/TaskDetails.css'; // Import stylów\r\n\r\nconst TaskDetails = ({ match }) => {\r\n  const taskId = match.params.id; // Pobieranie ID zadania z URL\r\n  const [task, setTask] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const loadTaskDetails = async () => {\r\n      try {\r\n        const taskDetails = await fetchTaskDetails(taskId);\r\n        setTask(taskDetails);\r\n\r\n        const taskComments = await fetchCommentsForTask(taskId);\r\n        setComments(taskComments);\r\n      } catch (err) {\r\n        setError('Nie udało się załadować szczegółów zadania.');\r\n      }\r\n    };\r\n\r\n    loadTaskDetails();\r\n  }, [taskId]);\r\n\r\n  const handleAddComment = async () => {\r\n    if (newComment.trim() === '') return;\r\n\r\n    try {\r\n      const result = await addCommentToTask(taskId, {\r\n        author: 'Aktualny Użytkownik', // Możesz zastąpić dynamicznym autorem\r\n        text: newComment,\r\n        date: new Date().toISOString(),\r\n      });\r\n\r\n      if (result.success) {\r\n        setComments((prevComments) => [...prevComments, result.comment]);\r\n        setNewComment('');\r\n      }\r\n    } catch (err) {\r\n      setError('Nie udało się dodać komentarza.');\r\n    }\r\n  };\r\n\r\n  if (!task) {\r\n    return <p>Ładowanie szczegółów zadania...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-details-container\">\r\n      <h1>{task.title}</h1>\r\n      <p>{task.description}</p>\r\n      <p>Status: {task.completed ? 'Zakończone' : 'W trakcie'}</p>\r\n\r\n      {/* Sekcja komentarzy */}\r\n      <div className=\"comments-section\">\r\n        <h2>Komentarze</h2>\r\n        <ul>\r\n          {comments.map((comment) => (\r\n            <li key={comment.id}>\r\n              <p>\r\n                <strong>{comment.author}</strong> ({new Date(comment.date).toLocaleDateString()}):{' '}\r\n                {comment.text}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        {/* Dodawanie nowego komentarza */}\r\n        <div className=\"add-comment\">\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder=\"Dodaj komentarz...\"\r\n          ></textarea>\r\n          <button onClick={handleAddComment}>Dodaj komentarz</button>\r\n        </div>\r\n      </div>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}