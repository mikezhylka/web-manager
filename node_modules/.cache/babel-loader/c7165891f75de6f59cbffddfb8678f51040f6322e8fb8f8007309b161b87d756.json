{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ja\\\\projektprojekt\\\\superprojekt\\\\src\\\\pages\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar'; // Import biblioteki kalendarza\nimport 'react-calendar/dist/Calendar.css'; // Stylizacja kalendarza\nimport '../styles/Calendar.css'; // Własne style\nimport { fetchTasks } from '../services/Api'; // Mockowana funkcja pobierania zadań\nimport { useNavigate } from 'react-router-dom'; // Hook do nawigacji\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [tasksForDate, setTasksForDate] = useState([]);\n  const navigate = useNavigate(); // Hook do nawigacji\n\n  // Pobieranie zadań\n  useEffect(() => {\n    const loadTasks = async () => {\n      const data = await fetchTasks();\n      setTasks(data);\n    };\n    loadTasks();\n  }, []);\n\n  // Obsługa wyboru daty\n  const handleDateChange = date => {\n    setSelectedDate(date);\n\n    // Filtruj zadania dla wybranej daty\n    const tasksForSelectedDate = tasks.filter(task => {\n      const taskDate = new Date(task.date);\n      return taskDate.toDateString() === date.toDateString();\n    });\n    setTasksForDate(tasksForSelectedDate);\n  };\n\n  // Generowanie zawartości dla daty w kalendarzu\n  const renderTileClass = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const hasTask = tasks.some(task => {\n        const taskDate = new Date(task.date);\n        return taskDate.toDateString() === date.toDateString();\n      });\n      return hasTask ? 'highlighted-date' : '';\n    }\n    return '';\n  };\n\n  // Powrót do dashboardu\n  const handleBackToDashboard = () => {\n    navigate('/dashboard');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kalendarz zada\\u0144\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleDateChange,\n      value: selectedDate,\n      tileClassName: renderTileClass // Dodanie klasy CSS do płytek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-for-date\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Zadania na \", selectedDate.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), tasksForDate.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasksForDate.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: task.completed ? 'completed' : 'pending',\n          children: [task.title, \" - Deadline: \", new Date(task.date).toLocaleDateString()]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Brak zada\\u0144 na wybrany dzie\\u0144.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: handleBackToDashboard,\n      children: \"Wr\\xF3\\u0107 do panelu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarPage, \"8kYJZnaullk1+rGKn3GFSg3BRdg=\", false, function () {\n  return [useNavigate];\n});\n_c = CalendarPage;\nexport default CalendarPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","fetchTasks","useNavigate","jsxDEV","_jsxDEV","CalendarPage","_s","tasks","setTasks","selectedDate","setSelectedDate","Date","tasksForDate","setTasksForDate","navigate","loadTasks","data","handleDateChange","date","tasksForSelectedDate","filter","task","taskDate","toDateString","renderTileClass","view","hasTask","some","handleBackToDashboard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","tileClassName","length","map","completed","title","toLocaleDateString","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ja/projektprojekt/superprojekt/src/pages/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar'; // Import biblioteki kalendarza\r\nimport 'react-calendar/dist/Calendar.css'; // Stylizacja kalendarza\r\nimport '../styles/Calendar.css'; // Własne style\r\nimport { fetchTasks } from '../services/Api'; // Mockowana funkcja pobierania zadań\r\nimport { useNavigate } from 'react-router-dom'; // Hook do nawigacji\r\n\r\nconst CalendarPage = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [tasksForDate, setTasksForDate] = useState([]);\r\n  const navigate = useNavigate(); // Hook do nawigacji\r\n\r\n  // Pobieranie zadań\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    };\r\n\r\n    loadTasks();\r\n  }, []);\r\n\r\n  // Obsługa wyboru daty\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n\r\n    // Filtruj zadania dla wybranej daty\r\n    const tasksForSelectedDate = tasks.filter((task) => {\r\n      const taskDate = new Date(task.date);\r\n      return taskDate.toDateString() === date.toDateString();\r\n    });\r\n\r\n    setTasksForDate(tasksForSelectedDate);\r\n  };\r\n\r\n  // Generowanie zawartości dla daty w kalendarzu\r\n  const renderTileClass = ({ date, view }) => {\r\n    if (view === 'month') {\r\n      const hasTask = tasks.some((task) => {\r\n        const taskDate = new Date(task.date);\r\n        return taskDate.toDateString() === date.toDateString();\r\n      });\r\n\r\n      return hasTask ? 'highlighted-date' : '';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  // Powrót do dashboardu\r\n  const handleBackToDashboard = () => {\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <h1>Kalendarz zadań</h1>\r\n      <Calendar\r\n        onChange={handleDateChange}\r\n        value={selectedDate}\r\n        tileClassName={renderTileClass} // Dodanie klasy CSS do płytek\r\n      />\r\n\r\n      <div className=\"tasks-for-date\">\r\n        <h2>Zadania na {selectedDate.toDateString()}</h2>\r\n        {tasksForDate.length > 0 ? (\r\n          <ul>\r\n            {tasksForDate.map((task) => (\r\n              <li key={task.id} className={task.completed ? 'completed' : 'pending'}>\r\n                {task.title} - Deadline: {new Date(task.date).toLocaleDateString()}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Brak zadań na wybrany dzień.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Przycisk powrotu do dashboardu */}\r\n      <button className=\"back-button\" onClick={handleBackToDashboard}>\r\n        Wróć do panelu\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}