{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ja\\\\projektprojekt\\\\superprojekt\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchTasks, createTask, updateTask } from '../services/Api';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userDepartment = 'IT'; // Dział przypisany do aktualnego użytkownika (dla uproszczenia)\n\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newDeadline, setNewDeadline] = useState('');\n\n  // Pobieranie zadań\n  useEffect(() => {\n    const loadTasks = async () => {\n      const data = await fetchTasks();\n      setTasks(data);\n    };\n    loadTasks();\n  }, []);\n\n  // Dodawanie nowego zadania\n  const handleAddTask = async () => {\n    if (newTask.trim() === '' || newDeadline === '') return;\n    const result = await createTask({\n      title: newTask,\n      date: newDeadline,\n      department: userDepartment,\n      status: 'todo'\n    });\n    if (result.success) {\n      setTasks(prevTasks => [...prevTasks, result.task]);\n      setNewTask('');\n      setNewDeadline('');\n    }\n  };\n\n  // Aktualizacja statusu zadania\n  const handleUpdateTaskStatus = async (taskId, newStatus) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (!task) return;\n    const updatedTask = {\n      ...task,\n      status: newStatus\n    };\n    const result = await updateTask(taskId, updatedTask);\n    if (result.success) {\n      setTasks(prevTasks => prevTasks.map(t => t.id === taskId ? result.task : t));\n    }\n  };\n\n  // Filtrowanie zadań według działu i statusu\n  const filterTasks = (department, status) => {\n    return tasks.filter(task => task.department === department && task.status === status);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Tablica Kanban - \", userDepartment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Nowe zadanie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newDeadline,\n        onChange: e => setNewDeadline(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Dodaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: ['todo', 'in-progress', 'done'].map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: status === 'todo' ? 'Do zrobienia' : status === 'in-progress' ? 'W trakcie' : 'Zakończone'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), filterTasks(userDepartment, status).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-task\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Deadline: \", new Date(task.date).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), status !== 'done' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateTaskStatus(task.id, status === 'todo' ? 'in-progress' : 'done'),\n            children: status === 'todo' ? 'Rozpocznij' : 'Zakończ'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))]\n      }, status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"1p0xUZJR+rSGHn59YUKofutWQ+A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","fetchTasks","createTask","updateTask","jsxDEV","_jsxDEV","userDepartment","Dashboard","_s","tasks","setTasks","newTask","setNewTask","newDeadline","setNewDeadline","loadTasks","data","handleAddTask","trim","result","title","date","department","status","success","prevTasks","task","handleUpdateTaskStatus","taskId","newStatus","find","t","id","updatedTask","map","filterTasks","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/ja/projektprojekt/superprojekt/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchTasks, createTask, updateTask } from '../services/Api';\r\nimport '../styles/Dashboard.css';\r\n\r\nconst userDepartment = 'IT'; // Dział przypisany do aktualnego użytkownika (dla uproszczenia)\r\n\r\nconst Dashboard = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n  const [newDeadline, setNewDeadline] = useState('');\r\n\r\n  // Pobieranie zadań\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    };\r\n\r\n    loadTasks();\r\n  }, []);\r\n\r\n  // Dodawanie nowego zadania\r\n  const handleAddTask = async () => {\r\n    if (newTask.trim() === '' || newDeadline === '') return;\r\n\r\n    const result = await createTask({\r\n      title: newTask,\r\n      date: newDeadline,\r\n      department: userDepartment,\r\n      status: 'todo',\r\n    });\r\n\r\n    if (result.success) {\r\n      setTasks((prevTasks) => [...prevTasks, result.task]);\r\n      setNewTask('');\r\n      setNewDeadline('');\r\n    }\r\n  };\r\n\r\n  // Aktualizacja statusu zadania\r\n  const handleUpdateTaskStatus = async (taskId, newStatus) => {\r\n    const task = tasks.find((t) => t.id === taskId);\r\n    if (!task) return;\r\n\r\n    const updatedTask = { ...task, status: newStatus };\r\n    const result = await updateTask(taskId, updatedTask);\r\n    if (result.success) {\r\n      setTasks((prevTasks) =>\r\n        prevTasks.map((t) => (t.id === taskId ? result.task : t))\r\n      );\r\n    }\r\n  };\r\n\r\n  // Filtrowanie zadań według działu i statusu\r\n  const filterTasks = (department, status) => {\r\n    return tasks.filter(\r\n      (task) => task.department === department && task.status === status\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"kanban-container\">\r\n      <h1>Tablica Kanban - {userDepartment}</h1>\r\n\r\n      {/* Dodawanie nowego zadania */}\r\n      <div className=\"add-task\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          placeholder=\"Nowe zadanie\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={newDeadline}\r\n          onChange={(e) => setNewDeadline(e.target.value)}\r\n        />\r\n        <button onClick={handleAddTask}>Dodaj</button>\r\n      </div>\r\n\r\n      <div className=\"kanban-board\">\r\n        {/* Kolumny Kanban */}\r\n        {['todo', 'in-progress', 'done'].map((status) => (\r\n          <div key={status} className=\"kanban-column\">\r\n            <h2>\r\n              {status === 'todo'\r\n                ? 'Do zrobienia'\r\n                : status === 'in-progress'\r\n                ? 'W trakcie'\r\n                : 'Zakończone'}\r\n            </h2>\r\n            {filterTasks(userDepartment, status).map((task) => (\r\n              <div key={task.id} className=\"kanban-task\">\r\n                <p>{task.title}</p>\r\n                <p>Deadline: {new Date(task.date).toLocaleDateString()}</p>\r\n                {status !== 'done' && (\r\n                  <button\r\n                    onClick={() =>\r\n                      handleUpdateTaskStatus(\r\n                        task.id,\r\n                        status === 'todo' ? 'in-progress' : 'done'\r\n                      )\r\n                    }\r\n                  >\r\n                    {status === 'todo' ? 'Rozpocznij' : 'Zakończ'}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}