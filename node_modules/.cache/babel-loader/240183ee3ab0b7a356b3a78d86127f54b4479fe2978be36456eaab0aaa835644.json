{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ja\\\\projektprojekt\\\\superprojekt\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchTasks } from '../services/Api';\nimport { useNavigate } from 'react-router-dom'; // Import nawigacji\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const navigate = useNavigate(); // Hook do nawigacji\n\n  useEffect(() => {\n    const loadTasks = async () => {\n      const data = await fetchTasks();\n      setTasks(data);\n    };\n    loadTasks();\n  }, []);\n  const handleTaskClick = id => {\n    navigate(`/task/${id}`); // Przejdź do TaskDetails\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel zada\\u0144\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : 'pending',\n        onClick: () => handleTaskClick(task.id) // Dodanie obsługi kliknięcia\n        ,\n        children: [task.title, \" - \", task.completed ? 'Zakończone' : 'W trakcie']\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"mP0t/edHjXqSrQwGHZvoFmDCs3M=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","fetchTasks","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","navigate","loadTasks","data","handleTaskClick","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","completed","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/ja/projektprojekt/superprojekt/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchTasks } from '../services/Api';\r\nimport { useNavigate } from 'react-router-dom'; // Import nawigacji\r\nimport '../styles/Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const navigate = useNavigate(); // Hook do nawigacji\r\n\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    };\r\n\r\n    loadTasks();\r\n  }, []);\r\n\r\n  const handleTaskClick = (id) => {\r\n    navigate(`/task/${id}`); // Przejdź do TaskDetails\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>Panel zadań</h1>\r\n      <ul className=\"task-list\">\r\n        {tasks.map((task) => (\r\n          <li\r\n            key={task.id}\r\n            className={task.completed ? 'completed' : 'pending'}\r\n            onClick={() => handleTaskClick(task.id)} // Dodanie obsługi kliknięcia\r\n          >\r\n            {task.title} - {task.completed ? 'Zakończone' : 'W trakcie'}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCH,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,IAAI,GAAG,MAAMV,UAAU,CAAC,CAAC;MAC/BO,QAAQ,CAACG,IAAI,CAAC;IAChB,CAAC;IAEDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAIC,EAAE,IAAK;IAC9BJ,QAAQ,CAAC,SAASI,EAAE,EAAE,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCX,OAAA;MAAAW,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBf,OAAA;MAAIU,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBR,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACdjB,OAAA;QAEEU,SAAS,EAAEO,IAAI,CAACC,SAAS,GAAG,WAAW,GAAG,SAAU;QACpDC,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAACS,IAAI,CAACR,EAAE,CAAE,CAAC;QAAA;QAAAE,QAAA,GAExCM,IAAI,CAACG,KAAK,EAAC,KAAG,EAACH,IAAI,CAACC,SAAS,GAAG,YAAY,GAAG,WAAW;MAAA,GAJtDD,IAAI,CAACR,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CAjCID,SAAS;EAAA,QAEIH,WAAW;AAAA;AAAAuB,EAAA,GAFxBpB,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}