{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ja\\\\projektprojekt\\\\superprojekt\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchTasks, createTask, updateTask } from '../services/Api';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userLegion = 'Legion 1'; // Przykładowy legion przypisany do użytkownika\n\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newDeadline, setNewDeadline] = useState('');\n  const navigate = useNavigate();\n\n  // Pobieranie zadań\n  useEffect(() => {\n    const loadTasks = async () => {\n      const data = await fetchTasks();\n      // Filtrujemy zadania widoczne tylko dla legionu użytkownika\n      const filteredTasks = data.filter(task => task.legion === userLegion);\n      setTasks(filteredTasks);\n    };\n    loadTasks();\n  }, []);\n\n  // Dodawanie nowego zadania\n  const handleAddTask = async () => {\n    if (newTask.trim() === '' || newDeadline === '') return;\n    const result = await createTask({\n      title: newTask,\n      date: newDeadline,\n      legion: userLegion,\n      // Dodajemy legion użytkownika do zadania\n      status: 'todo'\n    });\n    if (result.success) {\n      setTasks(prevTasks => [...prevTasks, result.task]);\n      setNewTask('');\n      setNewDeadline('');\n    }\n  };\n\n  // Aktualizacja statusu zadania\n  const handleUpdateTaskStatus = async (taskId, newStatus) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (!task) return;\n    const updatedTask = {\n      ...task,\n      status: newStatus\n    };\n    const result = await updateTask(taskId, updatedTask);\n    if (result.success) {\n      setTasks(prevTasks => prevTasks.map(t => t.id === taskId ? result.task : t));\n    }\n  };\n\n  // Nawigacja do szczegółów zadania\n  const handleViewTaskDetails = id => {\n    navigate(`/task/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Tablica Kanban - \", userLegion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Nowe zadanie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newDeadline,\n        onChange: e => setNewDeadline(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Dodaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: ['todo', 'in-progress', 'done'].map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: status === 'todo' ? 'Do zrobienia' : status === 'in-progress' ? 'W trakcie' : 'Zakończone'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), tasks.filter(task => task.status === status).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-task\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Deadline: \", new Date(task.date).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Legion:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this), \" \", task.legion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions\",\n            children: [status !== 'done' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdateTaskStatus(task.id, status === 'todo' ? 'in-progress' : 'done'),\n              children: status === 'todo' ? 'Rozpocznij' : 'Zakończ'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleViewTaskDetails(task.id),\n              children: \"Szczeg\\xF3\\u0142y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this))]\n      }, status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"7NSIAwkHX3pG2KudgPlORLhcq8E=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","fetchTasks","createTask","updateTask","useNavigate","jsxDEV","_jsxDEV","userLegion","Dashboard","_s","tasks","setTasks","newTask","setNewTask","newDeadline","setNewDeadline","navigate","loadTasks","data","filteredTasks","filter","task","legion","handleAddTask","trim","result","title","date","status","success","prevTasks","handleUpdateTaskStatus","taskId","newStatus","find","t","id","updatedTask","map","handleViewTaskDetails","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/ja/projektprojekt/superprojekt/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchTasks, createTask, updateTask } from '../services/Api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Dashboard.css';\r\n\r\nconst userLegion = 'Legion 1'; // Przykładowy legion przypisany do użytkownika\r\n\r\nconst Dashboard = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n  const [newDeadline, setNewDeadline] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Pobieranie zadań\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      const data = await fetchTasks();\r\n      // Filtrujemy zadania widoczne tylko dla legionu użytkownika\r\n      const filteredTasks = data.filter((task) => task.legion === userLegion);\r\n      setTasks(filteredTasks);\r\n    };\r\n\r\n    loadTasks();\r\n  }, []);\r\n\r\n  // Dodawanie nowego zadania\r\n  const handleAddTask = async () => {\r\n    if (newTask.trim() === '' || newDeadline === '') return;\r\n\r\n    const result = await createTask({\r\n      title: newTask,\r\n      date: newDeadline,\r\n      legion: userLegion, // Dodajemy legion użytkownika do zadania\r\n      status: 'todo',\r\n    });\r\n\r\n    if (result.success) {\r\n      setTasks((prevTasks) => [...prevTasks, result.task]);\r\n      setNewTask('');\r\n      setNewDeadline('');\r\n    }\r\n  };\r\n\r\n  // Aktualizacja statusu zadania\r\n  const handleUpdateTaskStatus = async (taskId, newStatus) => {\r\n    const task = tasks.find((t) => t.id === taskId);\r\n    if (!task) return;\r\n\r\n    const updatedTask = { ...task, status: newStatus };\r\n    const result = await updateTask(taskId, updatedTask);\r\n    if (result.success) {\r\n      setTasks((prevTasks) =>\r\n        prevTasks.map((t) => (t.id === taskId ? result.task : t))\r\n      );\r\n    }\r\n  };\r\n\r\n  // Nawigacja do szczegółów zadania\r\n  const handleViewTaskDetails = (id) => {\r\n    navigate(`/task/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"kanban-container\">\r\n      <h1>Tablica Kanban - {userLegion}</h1>\r\n\r\n      {/* Dodawanie nowego zadania */}\r\n      <div className=\"add-task\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          placeholder=\"Nowe zadanie\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={newDeadline}\r\n          onChange={(e) => setNewDeadline(e.target.value)}\r\n        />\r\n        <button onClick={handleAddTask}>Dodaj</button>\r\n      </div>\r\n\r\n      <div className=\"kanban-board\">\r\n        {/* Kolumny Kanban */}\r\n        {['todo', 'in-progress', 'done'].map((status) => (\r\n          <div key={status} className=\"kanban-column\">\r\n            <h2>\r\n              {status === 'todo'\r\n                ? 'Do zrobienia'\r\n                : status === 'in-progress'\r\n                ? 'W trakcie'\r\n                : 'Zakończone'}\r\n            </h2>\r\n            {tasks\r\n              .filter((task) => task.status === status)\r\n              .map((task) => (\r\n                <div key={task.id} className=\"kanban-task\">\r\n                  <p>{task.title}</p>\r\n                  <p>Deadline: {new Date(task.date).toLocaleDateString()}</p>\r\n                  <p>\r\n                    <strong>Legion:</strong> {task.legion}\r\n                  </p>\r\n                  <div className=\"task-actions\">\r\n                    {status !== 'done' && (\r\n                      <button\r\n                        onClick={() =>\r\n                          handleUpdateTaskStatus(\r\n                            task.id,\r\n                            status === 'todo' ? 'in-progress' : 'done'\r\n                          )\r\n                        }\r\n                      >\r\n                        {status === 'todo' ? 'Rozpocznij' : 'Zakończ'}\r\n                      </button>\r\n                    )}\r\n                    <button onClick={() => handleViewTaskDetails(task.id)}>\r\n                      Szczegóły\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}